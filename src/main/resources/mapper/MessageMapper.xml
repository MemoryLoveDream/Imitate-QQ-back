<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.easychat.mapper.MessageMapper">

    <select id="getNewMessages" parameterType="java.lang.String"
            resultType="com.example.easychat.data.vo.NewMessage">
        (SELECT m.message_type, m.sender_id AS id, m.send_time, latest.unread FROM message m JOIN (
            SELECT sender_id, MAX(send_time) AS max_send_time, COUNT(*) AS unread FROM message
            WHERE receiver_id = #{receiverId} AND message_type=1 AND seen = 0 GROUP BY sender_id
        ) AS latest ON m.sender_id = latest.sender_id AND m.send_time = latest.max_send_time
         WHERE m.receiver_id = #{receiverId} AND message_type=1 AND seen = 0)
        UNION ALL
        (SELECT m.message_type, m.group_id AS id, m.send_time, latest.unread FROM message m JOIN (
            SELECT group_id, MAX(send_time) AS max_send_time, COUNT(*) AS unread FROM message
            WHERE receiver_id = #{receiverId} AND message_type=2 AND seen = 0 GROUP BY group_id
        ) AS latest ON m.group_id = latest.group_id AND m.send_time = latest.max_send_time
         WHERE m.receiver_id = #{receiverId} AND message_type=2 AND seen = 0)
        ORDER BY send_time DESC
    </select>

    <select id="getPersonChats" parameterType="com.example.easychat.data.dto.We"
            resultType="com.example.easychat.data.vo.Chat">
        SELECT chat_type, sender_id, send_time, content FROM message WHERE message_type=1
        AND receiver_id=#{i} AND sender_id=#{you}
    </select>

    <select id="getGroupChats" parameterType="com.example.easychat.data.dto.We"
            resultType="com.example.easychat.data.vo.Chat">
        SELECT chat_type, sender_id, send_time, content FROM message WHERE message_type=2
        AND receiver_id=#{i} AND group_id=#{you}
    </select>

</mapper>
